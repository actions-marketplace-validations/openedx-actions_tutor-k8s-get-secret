#------------------------------------------------------------------------------
# written by: mcdaniel
# date: june-2022
#
# Extract a secret from a k8s namespace, unpack and decode the data values
# and format into a collection of bash environment variables that can be
# consumed by tutor on the command line during a ´tutor config save´ operation
#------------------------------------------------------------------------------
name: Open edX Tutor k8s get environment secret
description: Github Action to convert k8s secrets into tutor config variables.
branding:
  icon: 'cloud'
  color: 'orange'
inputs:
  eks-namespace:
    description: 'The Kubernetes namesapce to which the Open edX platform environment will be deployed. Example: openedx-prod'
    required: true
    type: string
  eks-secret-name:
    description: 'The name of a secret stored in the Kubernetes cluster. Example: mysql-root'
    required: true
    type: string

runs:
  using: "composite"
  steps:
    # - fetch from Kubernetes secrets
    # - dump secret metadata to console
    # - parse data and decode values
    # - output in JSON format
    - name: Fetch secret meta data from k8s
      id: fetch-metadata
      shell: bash
      run: |-
        echo "k8s secret:"
        echo "=================================================="
        kubectl get secret ${{ inputs.eks-secret-name }} -n ${{ inputs.eks-namespace }}  -o json | jq  .metadata | jq -r 'keys[] as $k | "\($k)=\(.[$k])"'
        echo "=================================================="


    # Fetch, decode, and transpose into environment variables consumable by tutor
    - name: Fetch decode and transform
      id: transform-secret
      shell: bash
      run: kubectl get secret ${{ inputs.eks-secret-name }} -n ${{ inputs.eks-namespace }}  -o json | jq  '.data | map_values(@base64d)' | jq -r 'keys[] as $k | "TUTOR_\($k|ascii_upcase)=\(.[$k])"' >> $GITHUB_ENV

    # Echo the same output to the console, replacing values with a mask
    - name: Output results to console
      id: console-output
      shell: bash
      run: |-
        echo "secret ${{ inputs.eks-secret-name }} in k8s namespace ${{ inputs.eks-namespace }}"
        echo "=================================================="
        kubectl get secret mysql-root -n openedx-prod  -o json | jq .data | jq -r 'keys[] as $k | "\($k|ascii_upcase)=***-- OUTPUT HIDDEN --***"'
        echo "=================================================="

